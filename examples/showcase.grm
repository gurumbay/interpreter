# =============================================
# DEMONSTRATION OF INTERPRETER CAPABILITIES
# Matches exactly what the C++ interpreter supports
# =============================================

# --------------------------
# 1. BASIC OUTPUT AND MATH
# --------------------------
print("=== BASIC OUTPUT AND MATH ===")

print("Hello, world!!!\n")

print("1 + 2 * 3 =", 1 + 2 * 3)    # 7
print("10 - 5 / 2 =", 10 - 5 / 2)  # 7.5
print("10 % 3 =", 10 % 3)          # 1 (modulo)
print("-(5 - 10) =", -(5 - 10))    # 5 (unary minus)

# --------------------------
# 2. VARIABLES AND ASSIGNMENT
# --------------------------
print("\n=== VARIABLES ===")
x = 10
y = 3
z = x * y
print("x =", x)
print("y =", y)
print("z = x * y =", z)   # 30

x = "String"
y = "concatenation"
z = x + " " + y
print(z)                  # String concatenation

# --------------------------
# 3. COMPARISONS AND LOGIC
# --------------------------
print("\n=== COMPARISONS ===")
print("5 > 3:", 5 > 3)      # 1.0 (true)
print("5 == 3:", 5 == 3)    # 0.0 (false)
print("5 != 3:", 5 != 3)    # 1.0 (true)
print("not 0:", not 0)      # 1.0 (true)
print("1 and 0:", 1 and 0)  # 0.0 (false)
print("1 or 0:", 1 or 0)    # 1.0 (true)

# --------------------------
# 4. CONDITIONALS (IF-ELSE)
# --------------------------
print("\n=== CONDITIONALS ===")
a = 10
print("a =", a)
if a > 5:
    print("a is greater than 5")
else:
    print("a is 5 or less")

if "":
    print("This won't print")
else:
    print("Empty string is false")

# Nested if
b = 15
if a > 5:
    if b > 10:
        print("Both conditions true")

# --------------------------
# 5. WHILE LOOPS
# --------------------------
print("\n=== WHILE LOOPS ===")
counter = 3
while counter > 0:
    print(counter)
    counter = counter - 1

# With break/continue
print("\nWhile with break/continue:")
i = 0
while i < 5:
    i = i + 1
    if i == 2:
        continue
    if i == 4:
        break
    print(i)

# --------------------------
# 6. FOR LOOPS WITH RANGE
# --------------------------
print("\n=== FOR LOOPS ===")
# Basic range
print("range(5):")
for i in range(5):
    print(i)

# Range with start/stop
print("\nrange(2, 5):")
for i in range(2, 5):
    print(i)

# Range with step
print("\nrange(0, 10, 2):")
for i in range(0, 10, 2):
    print(i)

# With break/continue
print("\nFor with break/continue:")
for i in range(10):
    if i % 2 == 0:
        continue
    if i > 7:
        break
    print(i)

# --------------------------
# 7. STRING OPERATIONS
# --------------------------
print("\n=== STRING OPERATIONS ===")
s1 = "Hello"
s2 = "Gurumbay"
print(s1 + " " + s2)      # Concatenation
print(s1[0])              # Indexing: 'H'
