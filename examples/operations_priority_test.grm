# =============================================
# OPERATIONS PRIORITY AND ASSOCIATIVITY TESTS
# =============================================

print("=== OPERATIONS PRIORITY AND ASSOCIATIVITY TESTS ===")

# --------------------------
# 1. BASIC ARITHMETIC PRECEDENCE
# --------------------------
print("\n--- Basic Arithmetic Precedence ---")

# Test multiplication over addition
result1 = 1 + 2 * 3
print("1 + 2 * 3 =", result1)  # Should be 7 (1 + 6)

result2 = 2 * 3 + 4
print("2 * 3 + 4 =", result2)  # Should be 10 (6 + 4)

# Test division over addition
result3 = 10 + 15 / 3
print("10 + 15 / 3 =", result3)  # Should be 15 (10 + 5)

result4 = 15 / 3 + 2
print("15 / 3 + 2 =", result4)  # Should be 7 (5 + 2)

# Test modulo
result5 = 10 + 7 % 3
print("10 + 7 % 3 =", result5)  # Should be 11 (10 + 1)

# --------------------------
# 2. POWER OPERATOR PRECEDENCE
# --------------------------
print("\n--- Power Operator Precedence ---")

# Test power over multiplication
result6 = 2 + 3 * 4**2
print("2 + 3 * 4**2 =", result6)  # Should be 50 (2 + 3 * 16)

result7 = 3 * 2**3 + 1
print("3 * 2**3 + 1 =", result7)  # Should be 25 (3 * 8 + 1)

# --------------------------
# 3. POWER OPERATOR RIGHT ASSOCIATIVITY
# --------------------------
print("\n--- Power Operator Right Associativity ---")

# Test right associativity: 2**(3**2) = 2**9 = 512
result8 = 2**3**2
print("2**3**2 =", result8)  # Should be 512 (2**(3**2))

# Test with parentheses to show difference
result9 = (2**3)**2
print("(2**3)**2 =", result9)  # Should be 64 ((8)**2)

# --------------------------
# 4. UNARY OPERATORS
# --------------------------
print("\n--- Unary Operators ---")

# Test unary minus precedence
result10 = -5 + 3
print("-5 + 3 =", result10)  # Should be -2

result11 = 3 + -5
print("3 + -5 =", result11)  # Should be -2

result12 = -2 * 3
print("-2 * 3 =", result12)  # Should be -6

result13 = 2 * -3
print("2 * -3 =", result13)  # Should be -6

# Test unary not
result14 = not 0
print("not 0 =", result14)  # Should be 1 (true)

result15 = not 1
print("not 1 =", result15)  # Should be 0 (false)

# --------------------------
# 5. COMPARISON OPERATORS
# --------------------------
print("\n--- Comparison Operators ---")

# Test comparison precedence over arithmetic
result16 = 1 + 2 == 3
print("1 + 2 == 3 =", result16)  # Should be 1 (true)

result17 = 1 + 2 < 3 * 2
print("1 + 2 < 3 * 2 =", result17)  # Should be 1 (true, 3 < 6)

result18 = 5 > 3 + 1
print("5 > 3 + 1 =", result18)  # Should be 1 (true, 5 > 4)

# Test chained comparisons
result19 = 1 < 2 < 3
print("1 < 2 < 3 =", result19)  # Should be 1 (true)

# --------------------------
# 6. LOGICAL OPERATORS
# --------------------------
print("\n--- Logical Operators ---")

# Test logical operator precedence
result20 = 1 and 0 or 1
print("1 and 0 or 1 =", result20)  # Should be 1 (true)

result21 = 0 or 1 and 0
print("0 or 1 and 0 =", result21)  # Should be 0 (false)

# Test with comparisons
result22 = 5 > 3 and 2 < 4
print("5 > 3 and 2 < 4 =", result22)  # Should be 1 (true)

result23 = 5 < 3 or 2 < 4
print("5 < 3 or 2 < 4 =", result23)  # Should be 1 (true)

# --------------------------
# 7. COMPLEX EXPRESSIONS
# --------------------------
print("\n--- Complex Expressions ---")

# Test complex precedence combinations
result24 = 1 + 2 * 3**2 - 4 / 2
print("1 + 2 * 3**2 - 4 / 2 =", result24)  # Should be 17 (1 + 18 - 2)

result25 = 2**3 - 100
print("2**3 - 100 =", result25)  # Should be -92 (8 - 100)

result26 = not 0 and 1 + 2 * 3
print("not 0 and 1 + 2 * 3 =", result26)  # Should be 7 (true and 7)

# --------------------------
# 8. FUNCTION CALLS AND MEMBER ACCESS
# --------------------------
print("\n--- Function Calls and Member Access ---")

# Test function call precedence
result27 = print("Function call test passed")
print("Function call result =", result27)  # Should be 0 (print returns 0)

# Test member access precedence
text = "Hello"
length = text.length
print("text.length =", length)  # Should be 5

# Test list with member access
numbers = [1, 2, 3, 4, 5]
list_length = numbers.length
print("numbers.length =", list_length)  # Should be 5

# --------------------------
# 9. PARENTHESES AND GROUPING
# --------------------------
print("\n--- Parentheses and Grouping ---")

# Test parentheses override precedence
result28 = (1 + 2) * 3
print("(1 + 2) * 3 =", result28)  # Should be 9 (3 * 3)

result29 = 2**(2 + 1)
print("2**(2 + 1) =", result29)  # Should be 8 (2**3)

result30 = (2 + 3) * (4 + 5)
print("(2 + 3) * (4 + 5) =", result30)  # Should be 45 (5 * 9)

# --------------------------
# 10. EDGE CASES
# --------------------------
print("\n--- Edge Cases ---")

# Test zero and negative numbers
result31 = 0 + 0
print("0 + 0 =", result31)  # Should be 0

result32 = -0
print("-0 =", result32)  # Should be 0

result33 = 1 + -1
print("1 + -1 =", result33)  # Should be 0

# Test logical edge cases
result34 = not not 1
print("not not 1 =", result34)  # Should be 1 (true)

result35 = 1 and 1 and 1
print("1 and 1 and 1 =", result35)  # Should be 1 (true)

result36 = 0 or 0 or 1
print("0 or 0 or 1 =", result36)  # Should be 1 (true)

print("\n=== ALL OPERATIONS PRIORITY TESTS COMPLETED ===")
